/*
 * Copyright (C) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @file
 * @kit ArkUI
 */

/**
 * AppStorageV2 is for UI state of app-wide access, has same life cycle as the app,
 * and saves database content only in memory.
 *
 * @syscap SystemCapability.ArkUI.ArkUI.Full
 * @crossplatform
 * @since 12
 */
export declare class AppStorageV2 {
    /**
     * If the value for the given key is already available, return the value.
     * If not, add the key with value generated by calling defaultFunc and return it to caller.
     *
     * @param { string } key key adding
     * @param { () => T } defaultFunc the function generating the default value
     * @returns { T } the value of the existed key or the default value
     * @syscap SystemCapability.ArkUI.ArkUI.Full
     * @crossplatform
     * @since 12
     */
    static connect<T>(key: string, defaultFunc: () => T): T;
  
    /**
     * Removes the given key. Return false if the given key does not exist.
     *
     * @param { string } key key removing
     * @returns { boolean } exist or not
     * @syscap SystemCapability.ArkUI.ArkUI.Full
     * @crossplatform
     * @since 12
     */
    static remove(key: string): boolean;
  
    /**
     * Return the array of all keys.
     *
     * @returns { Array<string> } the array of all keys
     * @syscap SystemCapability.ArkUI.ArkUI.Full
     * @crossplatform
     * @since 12
     */
    static keys() : Array<string>
  }
  
  /**
   * PersistenceV2 is for UI state of app-wide access, available on app re-start,
   * and saves database content in disk.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @crossplatform
   * @since 12
   */
  export declare class PersistenceV2 extends AppStorageV2 {
    /**
     * The purpose of the save function is request to persist non-observed object changes.
     *
     * @param { string } key key saving
     * @syscap SystemCapability.ArkUI.ArkUI.Full
     * @crossplatform
     * @since 12
     */
    static save(key: string): void;
  
    /**
     * Be called when persisting has encountered an error.
     *
     * @param { ((key: string, reason: "quota" | "serialisation" | "unknown", message: string) => void) } callback called when error
     * @syscap SystemCapability.ArkUI.ArkUI.Full
     * @crossplatform
     * @since 12
     */
    static notifyOnError(callback: ((key: string, reason: "quota" | "serialisation" | "unknown", message: string) => void)): void;
  }
  
  /**
   * Define Type Decorator type.
   *
   * @typedef { function } TypeDecorator
   * @param { { new(): T } } type type info
   * @returns { PropertyDecorator } Type decorator
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @crossplatforma
   * @since 12
   */
  export declare type TypeDecorator = <T>(type: { new(): T }) => PropertyDecorator;
  
  /**
   * Define Type PropertyDecorator.
   *
   * @syscap SystemCapability.ArkUI.ArkUI.Full
   * @crossplatform
   * @since 12
   */
  export declare const Type: TypeDecorator;
  